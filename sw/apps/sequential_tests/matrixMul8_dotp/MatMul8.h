#ifndef _MATMUL_HEADER_
#define _MATMUL_HEADER_

void matMul8_t(int N , int M);
void matMul8_t_dot(int N , int M);
void matMul8(int N , int M);

const char m_a[] = {
3,
-2,
-3,
-3,
2,
2,
1,
-4,
-2,
-3,
-1,
-4,
-3,
1,
-1,
-4,
-2,
-3,
1,
-2,
2,
2,
1,
0,
-2,
-2,
-1,
0,
-1,
3,
3,
0,
0,
-1,
2,
3,
-4,
3,
2,
1,
-3,
-3,
1,
2,
3,
-3,
-1,
-4,
3,
3,
1,
2,
-3,
0,
2,
-2,
3,
-4,
-2,
3,
1,
-3,
1,
2,
};

const char m_b[] = {
-4,
0,
1,
1,
1,
0,
-2,
1,
0,
-4,
-4,
0,
-4,
-4,
-3,
-2,
-2,
-3,
1,
-2,
3,
0,
0,
-3,
-2,
0,
-3,
-4,
1,
3,
0,
-2,
1,
-1,
1,
-1,
-3,
0,
2,
-2,
2,
3,
-4,
-4,
3,
2,
2,
1,
0,
-4,
3,
-2,
-2,
3,
3,
-2,
-2,
0,
-2,
-2,
-3,
3,
-2,
-3,
};

const int m_exp[] = {
14,
17,
22,
17,
9,
-6,
19,
30,
25,
25,
19,
25,
29,
-13,
14,
36,
16,
9,
14,
-8,
9,
13,
24,
1,
15,
9,
1,
-17,
9,
23,
23,
4,
-10,
3,
-15,
-30,
27,
28,
5,
-6,
11,
1,
24,
6,
10,
-3,
20,
1,
-17,
-20,
-7,
-4,
7,
-6,
-11,
-2,
-23,
8,
20,
0,
-4,
28,
1,
-2,
};


#define SIZE 8
char g_mA[SIZE][SIZE];
char g_mB[SIZE][SIZE];
int g_mC[SIZE][SIZE];
char g_mB_tmp[SIZE][SIZE];


#endif
